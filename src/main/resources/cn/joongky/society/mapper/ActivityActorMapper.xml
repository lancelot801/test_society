<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.joongky.society.dao.ActivityActorMapper" >
  <resultMap id="BaseResultMap" type="cn.joongky.society.pojo.ActivityActor" >
    <id column="activity_actor_id" property="activityActorId" jdbcType="VARCHAR" />
    <result column="activity_id" property="activityId" jdbcType="VARCHAR" />
    <result column="actor_id" property="actorId" jdbcType="VARCHAR" />
    <result column="joined_time" property="joinedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    activity_actor_id, activity_id, actor_id, joined_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.joongky.society.pojo.ActivityActorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_actor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from activity_actor
    where activity_actor_id = #{activityActorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from activity_actor
    where activity_actor_id = #{activityActorId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.joongky.society.pojo.ActivityActorExample" >
    delete from activity_actor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.joongky.society.pojo.ActivityActor" >
    insert into activity_actor (activity_actor_id, activity_id, actor_id, 
      joined_time)
    values (#{activityActorId,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{actorId,jdbcType=VARCHAR}, 
      #{joinedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.joongky.society.pojo.ActivityActor" >
    insert into activity_actor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityActorId != null" >
        activity_actor_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="actorId != null" >
        actor_id,
      </if>
      <if test="joinedTime != null" >
        joined_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityActorId != null" >
        #{activityActorId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="actorId != null" >
        #{actorId,jdbcType=VARCHAR},
      </if>
      <if test="joinedTime != null" >
        #{joinedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.joongky.society.pojo.ActivityActorExample" resultType="java.lang.Integer" >
    select count(*) from activity_actor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_actor
    <set >
      <if test="record.activityActorId != null" >
        activity_actor_id = #{record.activityActorId,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null" >
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.actorId != null" >
        actor_id = #{record.actorId,jdbcType=VARCHAR},
      </if>
      <if test="record.joinedTime != null" >
        joined_time = #{record.joinedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_actor
    set activity_actor_id = #{record.activityActorId,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      actor_id = #{record.actorId,jdbcType=VARCHAR},
      joined_time = #{record.joinedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.joongky.society.pojo.ActivityActor" >
    update activity_actor
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="actorId != null" >
        actor_id = #{actorId,jdbcType=VARCHAR},
      </if>
      <if test="joinedTime != null" >
        joined_time = #{joinedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where activity_actor_id = #{activityActorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.joongky.society.pojo.ActivityActor" >
    update activity_actor
    set activity_id = #{activityId,jdbcType=VARCHAR},
      actor_id = #{actorId,jdbcType=VARCHAR},
      joined_time = #{joinedTime,jdbcType=TIMESTAMP}
    where activity_actor_id = #{activityActorId,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="cn.joongky.society.pojo.ActivityActorExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_actor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>